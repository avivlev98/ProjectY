
trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

  imageRepo: myflagacr3210
  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: 'acr-srv-project-y'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/result/Dockerfile'
        tags: '$(tag)'
      
    - task: Docker@2
      inputs:
        containerRegistry: 'acr-srv-project-y'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/vote/Dockerfile'
        
    - task: Docker@2
      inputs:
        containerRegistry: 'acr-srv-project-y'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/worker/Dockerfile'
        
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/k8s-specifications'
        artifact: 'manifests'
        publishLocation: 'pipeline'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  variables:
    arcsecret: k8ssecretforacrflag
    repoURl: myflagacr3210.azurecr.io
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'avivlev98ProjectY.project-y'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'manifests'
              targetPath: '$(Pipeline.Workspace)/manifests'
          
          - task: KubernetesManifest@0
            inputs:
              action: 'createSecret'
              kubernetesServiceConnection: 'flag-aks-project-y'
              namespace: 'project-y'
              secretType: 'dockerRegistry'
              secretName: '$(arcsecret)'
              dockerRegistryEndpoint: 'acr-srv-project-y'

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: 'deploy'
              namespace: 'project-y'
              manifests: |
                $(Pipeline.Workspace)/manifests/postgres-deploy.yaml
                $(Pipeline.Workspace)/manifests/postgres-service.yaml
                $(Pipeline.Workspace)/manifests/redis-deploy.yaml
                $(Pipeline.Workspace)/manifests/redis-service.yaml
                $(Pipeline.Workspace)/manifests/result-app-deploy.yaml
                $(Pipeline.Workspace)/manifests/result-app-service.yaml
                $(Pipeline.Workspace)/manifests/voting-app-deploy.yaml
                $(Pipeline.Workspace)/manifests/voting-app-service.yaml
                $(Pipeline.Workspace)/manifests/worker-app-deploy.yaml

              containers: |
                $(repoURl)/$(imageRepo):$(tag)

